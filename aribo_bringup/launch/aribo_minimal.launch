<launch>

  <arg name="use_sim" default="true" />
  <arg name="use_gazebo_gui" default="false" />
  <arg name="use_joystick" default="false" />
  <arg name="use_keyboard" default="true" />
  <arg name="generate_robot" default="true" />
  <arg name="launch_rviz" default="true" />
  <arg name="use_imu" default="true" />
  <arg name="use_rgbd_camera" default="true" />
  <arg name="use_map" default="true" />
  <arg name="use_arucos" default="false" />

  <group if="$(arg launch_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find aribo)/launch/aribo.rviz" />
  </group>

  <group if="$(arg generate_robot)">
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find gvr_bot)/models/robots/gvr_bot.urdf.xacro'" />
    <node
      name="joint_state_publisher"
      pkg="joint_state_publisher"
      type="joint_state_publisher" />
    <node
      name="robot_state_publisher"
      pkg="robot_state_publisher"
      type="state_publisher" />
  </group>

  <group if="$(arg use_joystick)">
    <arg name="joy_dev" default="/dev/input/js0" />
    <!-- When using an Xbox 360 controller A is the trigger and the left joystick will move the robot -->
    <node pkg="joy" type="joy_node" name="joy_node">
      <param name="dev" value="$(arg joy_dev)" />
      <param name="deadzone" value="0.3" />
      <param name="autorepeat_rate" value="20" />
    </node>
  
    <node pkg="teleop_twist_joy" name="teleop_twist_joy" type="teleop_node">
      <remap from="/cmd_vel" to="/gvr_bot/cmd_vel" />
    </node>
  </group>
 
  <group if="$(arg use_keyboard)">
    <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop">
      <remap from="/cmd_vel" to="/gvr_bot/cmd_vel" />
    </node>
  </group>

  <group if="$(arg use_sim)"> 
    <param name="use_sim_time" value="true" />
    <!-- spawn gazebo without the GUI -->
    <!-- TODO: make all of the args in empty_world.launch pass through to a level above as well -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="gui" value="$(arg use_gazebo_gui)" />
    </include>
  
    <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
      args="-param robot_description
            -urdf
            -z 1.7
            -model robot_description"
      respawn="false" output="screen" />
  </group>

  <group unless="$(arg use_sim)"> 
    <node name="gvr_bot_bridge" pkg="gvr_bot" type="run_gvr_bot.sh" output="screen" />
  </group> 

  <!-- Set up a static transform publisher between the base_link of the robot and the camera frame -->
  <group if="$(arg use_rgbd_camera)"> 
    <include file="$(find openni2_launch)/launch/openni2.launch" />
    <node pkg="tf" type="static_transform_publisher" name="robot_rgbd_broadcaster" args="0.25 0 0 0 0 0 1 base_link camera_link 100" />
    <node pkg="depthimage_to_laserscan" name="depth_to_laser" type="depthimage_to_laserscan">
	  <remap to="/camera/depth/image_raw" from="image"/>
	  <remap to="/camera/depth/camera_info" from="camera_info"/>
      <remap from="scan" to="/camera/depth/scan"/>
    </node>
  </group> 

  <!-- Set up Phidgets IMU -->
  <group if="$(arg use_imu)"> 
    <include file="$(find phidgets_imu)/launch/imu.launch" />
  </group> 

  <!-- Set up marker tracking -->
  <group if="$(arg use_arucos)"> 
    <include file="$(find aruco_ros)/launch/sample_aruco.launch" />
  </group> 

</launch>
